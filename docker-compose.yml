services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: restaurante_app
    volumes:
      - ./:/var/www/html
    depends_on:
      db:
        condition: service_healthy
    networks:
      - appnet

  nginx:
    image: nginx:1.25-alpine
    container_name: restaurante_nginx
    ports:
      - "8080:80"
    volumes:
      - ./:/var/www/html
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - app
    networks:
      - appnet

  db:
    image: postgres:15
    container_name: restaurante_db
    environment:
      POSTGRES_DB: restaurante1
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 123456
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d restaurante1"]
      interval: 5s
      timeout: 3s
      retries: 10
    networks:
      - appnet

volumes:
  db_data:

networks:
  appnet:
    driver: bridge
